; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[platformio]
default_envs = debug-d1_mini

[env]
lib_deps =
	bblanchon/ArduinoJson@^6.19.4
	; ottowinter/AsyncMqttClient-esphome@0.8.6
	marvinroger/AsyncMqttClient@^0.9.0
	adafruit/Adafruit NeoPixel@^1.10.6
	esphome/ESPAsyncWebServer-esphome@2.1.0

[common]
board_build.filesystem = littlefs
framework = arduino
lib_deps =
	${env.lib_deps}
extra_scripts =
	pre:scripts/install_deps.py
	pre:scripts/build_ui.py

[common:d1_mini]
extends = common
monitor_speed = 115200
upload_speed = 460800
platform = espressif8266
board = d1_mini
build_flags =
	-Wno-nonnull-compare
	-DUSE_ESP8266
extra_scripts =
	${common.extra_scripts}
	pre:scripts/build_d1_mini_pinout.py

[common:esp32]
extends = common
monitor_speed = 115200
upload_speed = 460800
platform = espressif32
monitor_filters = esp32_exception_decoder ; this increases size of elf
board = esp32dev
; board_build.partitions = default_8MB.csv
build_flags =
	-Wno-nonnull-compare
	-DUSE_ESP32
extra_scripts =
	${common.extra_scripts}
	pre:scripts/build_esp32_pinout.py

[common:zaku-core_rev1]
extends = common:esp32
monitor_speed = 115200
upload_speed = 460800
platform = espressif32
board = esp32dev
monitor_dtr = 1
board_build.mcu = esp32s2
; board_build.partitions = default_8MB.csv
build_flags =
	-Wno-nonnull-compare
	-DUSE_ESP32
	-DUSE_ZAKU_CORE
	-D ARDUINO_USB_CDC_ON_BOOT
	-D PIO_FRAMEWORK_ARDUINO_ENABLE_CDC
	-D PIO_FRAMEWORK_ARDUINO_USB_FULLMODE
extra_scripts =
	${common.extra_scripts}
	pre:scripts/build_zaku_core_pinout.py

[env:debug-d1_mini]
extends = common:d1_mini
monitor_filters = esp8266_exception_decoder
build_type = debug
debug_tool = esp-prog
debug_build_flags = -Os

[env:debug-esp32]
extends = common:esp32
build_type = debug
debug_build_flags = -Os

[env:debug-zaku-core_rev1]
extends = common:zaku-core_rev1
build_type = debug
debug_build_flags = -Os

[env:release_d1_mini]
extends = common:d1_mini
build_type = release

[env:release_zaku-core_rev1]
extends = common:zaku-core_rev1
build_type = release
